schema {
  query: Query
  mutation: Mutation
}

type Query {
  book: Book!
  gepBook(id: Long!): Book!
  test(id: Long!): Book!
}

type Mutation {
  addBook(book: BookInput!): BookAddedPayload!
}

"The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1."
scalar Long

type Book {
  title: String!
  author: Author!
}

type BookAddedPayload {
  title: String!
  author: String!
}

input BookInput {
  title: String!
  author: AuthorInput!
}

input AuthorInput {
  name: String!
}

type Author {
  name: String!
}